server {
	server_name default.com;
	return 301 https://$host$request_uri;
}
server {
	listen   80 default_server;
	#listen 443 http2 ssl;
	access_log off;
	error_log off;
	root /home/default/public_html;
	limit_conn conn_limit_per_ip 60;
	limit_req zone=req_limit_per_ip burst=200 nodelay;
	index index.php index.html index.htm;
	server_name default;
	ssl_certificate /etc/letsencrypt/live/default.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/default.com/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	ssl_dhparam /etc/ssl/certs/dhparam.pem;
	
	location ~ /.well-known {
		allow all;
	}
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
	location ~ \.php$ {
	    fastcgi_split_path_info ^(.+\.php)(/.+)$;
	    include /etc/nginx/fastcgi_params;
	    fastcgi_pass 127.0.0.1:9000;
	    fastcgi_index index.php;
	    fastcgi_connect_timeout 120;
	    fastcgi_send_timeout 180;
	    fastcgi_read_timeout 180;
	    fastcgi_buffer_size 256k;
	    fastcgi_buffers 4 256k;
	    fastcgi_busy_buffers_size 256k;
	    fastcgi_temp_file_write_size 256k;
	    fastcgi_intercept_errors on;
	    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	}

	location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso)$ {
		gzip_static off;
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
    	}

	location ~* \.(js)$ {
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
    	}

	location ~* \.(css)$ {
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
    	}

	location ~* \.(txt)$ {
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 1d;
		break;
    	}

	location ~* \.(eot|svg|ttf|woff)$ {
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
    	}
	location = /robots.txt  { access_log off; log_not_found off; }
	location = /favicon.ico { access_log off; log_not_found off; expires 30d; }	
	location ~ /\.          { access_log off; log_not_found off; deny all; }
	location ~ ~$           { access_log off; log_not_found off; deny all; }
	location ~ /\.git { access_log off; log_not_found off; deny all; }

}
